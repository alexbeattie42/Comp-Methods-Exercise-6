function F = forces(mbs, q)

F = zeros(mbs.nq, 1);
f_idx = 0;
% forces due to gravity
if ~isempty(mbs.gravity)
    q_idx = 0;
    for b = mbs.bodies
       F(q_idx + (1:2)) = b.m .* mbs.gravity;
       q_idx = q_idx + 3;
    end
end

for f = mbs.forces.point_force
   q_idx = f.body;
   force = flip(f.force');
   F(q_idx + (1:2)) = F(q_idx + (1:2)) + force;
end 

for f = mbs.forces.rotational_spring
   b1_idx = f.body1;
   b2_idx = f.body2;
   angle = f.force(1);
   k = f.force(2);
   torque = K * angle;
   force1 = f.body1.Ic * torque;
   force2 = f.body2.Ic * -torque;
   F(b1_idx + (1:2)) = F(b_idx + (1:2)) + force1;
   F(b2_idx + (1:2)) = F(b2_idx + (1:2)) - force;
end 

% for rj = mbs.joints.revolute
%     q1 = q(body_idx(rj.body1));
%     q2 = q(body_idx(rj.body2));
%     r1 = q1(1:2);
%     r2 = q2(1:2);
%     A1 = rot(q1(3));
%     A2 = rot(q2(3));
%     C(c_idx + (1:2)) = r1 + A1 * rj.s1 - r2 - A2 * rj.s2;
%     c_idx = c_idx + 2;
% end


end
    
